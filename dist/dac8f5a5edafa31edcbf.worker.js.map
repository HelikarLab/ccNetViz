{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layout/force.worker.js","webpack:///./src/quadTree.js"],"names":["points","d","xs","ys","i","n","x1_","y1_","x2_","y2_","Infinity","length","x","y","push","dx","dy","create","leaf","nodes","point","visit","f","node","x1","y1","x2","y2","sx","sy","children","insert","nx","ny","insertChild","nPoint","xm","ym","right","below","findNode","root","x0","y0","x3","y3","minDistance2","closestPoint","find","distance2","distance","Math","sqrt","j"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kGAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A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","file":"dac8f5a5edafa31edcbf.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/layout/force.worker.js\");\n","import ccNetViz_quadtree from '../quadTree';\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n \nexport default function(nodes, edges, options = {}) {\n    const edgeDistance = 15,\n        edgeStrength = 1,\n        friction = 0.9,\n        charge = -30,\n        gravity = 0.4,\n        theta2 = .64,\n        size = [1,1],\n        chargeDistance2 = Infinity;\n\n    let   alpha,\n          distances = [],\n          strengths = [],\n          charges = [];\n\n\n    function accumulate(quad, alpha, charges) {\n        let cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            let nodes = quad.nodes;\n            let c, n = nodes.length;\n\n            for (let i = 0; i < n; i++) {\n                c = nodes[i];\n                if (c == null) continue;\n                accumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - 0.5;\n                quad.point.y += Math.random() - 0.5;\n            }\n            let k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n\n    function repulse(node) {\n        return function(quad, x1, _, x2) {\n            if (quad.point !== node) {\n                let dx = quad.cx - node.x;\n                let dy = quad.cy - node.y;\n                let dw = x2 - x1;\n                let dn = dx * dx + dy * dy;\n\n                if (dw * dw / theta2 < dn) {\n                    if (dn < chargeDistance2) {\n                        let k = quad.charge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                    return true;\n                }\n\n                if (quad.point && dn && dn < chargeDistance2) {\n                    let k = quad.pointCharge / dn;\n                    node.px -= dx * k;\n                    node.py -= dy * k;\n                }\n            }\n            return !quad.charge;\n        };\n    }\n\n    function step() {\n        if ((alpha *= .99) < .05) {\n            alpha = 0;\n            return true;\n        }\n\n        let q, o, s, t, l, k, x, y;\n        let n = nodes.length;\n        let m = edges.length;\n\n        for (let i = 0; i < m; i++) {\n            o = edges[i];\n            s = o.source;\n            t = o.target;\n            x = t.x - s.x;\n            y = t.y - s.y;\n            if (l = (x * x + y * y)) {\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                x *= l;\n                y *= l;\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\n                t.y -= y * k;\n                s.x += x * (k = 1 - k);\n                s.y += y * k;\n            }\n        }\n\n        if (k = alpha * gravity) {\n            x = size[0] / 2;\n            y = size[1] / 2;\n\n            for (let i = 0; i < n; i++) {\n                o = nodes[i];\n                o.x += (x - o.x) * k;\n                o.y += (y - o.y) * k;\n            }\n        }\n\n        if (charge) {\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\n\n            for (let i = 0; i < n; i++) {\n                let o = nodes[i];\n                !o.fixed && q.visit(repulse(o));\n            }\n        }\n\n        const rnd = (min,max) => Math.random() * (max-min) + min;\n        for (let i = 0; i < n; i++) {\n            o = nodes[i];\n            if (o.fixed || o.fixed2) {\n                o.x = o.px;\n                o.y = o.py;\n            }\n            else {\n                o.x -= (o.px - (o.px = o.x)) * friction;\n                o.y -= (o.py - (o.py = o.y)) * friction;\n\n                if(options && options.minX !== undefined){\n                    if(o.x < options.minX || o.x > options.maxX){\n                        o.x = rnd(options.minX, options.maxX);\n                    }\n                    if(o.y < options.minY || o.y > options.maxY){\n                        o.y = rnd(options.minY, options.maxY);\n                    }\n                }\n            }\n        }\n    };\n\n    this.apply = function() {\n        let n = nodes.length;\n        let d = Math.sqrt(n);\n        let s = 0.3 / d;\n\n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            o.weight = 0;\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\n            o.px = o.x;\n            o.py = o.y;\n            charges[i] = charge;\n        }\n\n        for (let i = 0; i < edges.length; i++) {\n            let o = edges[i];\n            o.source.weight++;\n            o.target.weight++;\n            distances[i] = edgeDistance;\n            strengths[i] = edgeStrength;\n        }\n\n        alpha = 0.1;\n        while (!step());\n\n        return true;\n    };\n};\n\nself.addEventListener('message', function (e) {\n    let data = e.data;\n    for (let i = 0, n = data.length; i < n; i++) {\n        let o = data[i];\n        o.x = Math.random();\n        o.y = Math.random();\n    }\n    self.postMessage(data);\n}, false);","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(points) {\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\n\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\n    xs = [], ys = [];\n    n = points.length;\n\n    for (i = 0; i < n; ++i) {\n        d = points[i];\n        if (d.x < x1_) x1_ = d.x;\n        if (d.y < y1_) y1_ = d.y;\n        if (d.x > x2_) x2_ = d.x;\n        if (d.y > y2_) y2_ = d.y;\n        xs.push(d.x);\n        ys.push(d.y);\n    }\n\n    let dx = x2_ - x1_;\n    let dy = y2_ - y1_;\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\n\n    function create() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n\n    function visit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            let sx = (x1 + x2) * 0.5;\n            let sy = (y1 + y2) * 0.5;\n            let children = node.nodes;\n\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n\n    function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (n.leaf) {\n            let nx = n.x;\n            let ny = n.y;\n\n            if (nx !== null) {\n                if (nx === x && ny === y) {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n                else {\n                    let nPoint = n.point;\n                    n.x = n.y = n.point = null;\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            } else {\n                n.x = x, n.y = y, n.point = d;\n            }\n        } else {\n            insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n    }\n\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        let xm = (x1 + x2) * 0.5;\n        let ym = (y1 + y2) * 0.5;\n        let right = x >= xm;\n        let below = y >= ym;\n        let i = below << 1 | right;\n\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = create());\n\n        right ? x1 = xm : x2 = xm;\n        below ? y1 = ym : y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n    }\n\n    function findNode(root, x, y, x0, y0, x3, y3) {\n        let minDistance2 = Infinity;\n        let closestPoint;\n\n        (function find(node, x1, y1, x2, y2) {\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n            if (point = node.point) {\n                let point;\n                let dx = x - node.x;\n                let dy = y - node.y;\n                let distance2 = dx * dx + dy * dy;\n\n                if (distance2 < minDistance2) {\n                    let distance = Math.sqrt(minDistance2 = distance2);\n                    x0 = x - distance, y0 = y - distance;\n                    x3 = x + distance, y3 = y + distance;\n                    closestPoint = point;\n                }\n            }\n\n            let children = node.nodes;\n            let xm = (x1 + x2) * .5;\n            let ym = (y1 + y2) * .5;\n            let right = x >= xm;\n            let below = y >= ym;\n\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\n                if (node = children[i & 3]) switch (i & 3) {\n                    case 0: find(node, x1, y1, xm, ym); break;\n                    case 1: find(node, xm, y1, x2, ym); break;\n                    case 2: find(node, x1, ym, xm, y2); break;\n                    case 3: find(node, xm, ym, x2, y2); break;\n                }\n            }\n        })(root, x0, y0, x3, y3);\n\n        return closestPoint;\n    }\n\n    let root = create();\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\n\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n    --i;\n\n    xs = ys = points = d = null;\n\n    return root;\n};"],"sourceRoot":""}